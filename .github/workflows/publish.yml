name: Build and Publish

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: abatilo/actions-poetry@v3
      - run: poetry install --no-interaction --no-root
      - run: poetry build
      - name: Determine release target
        id: vars
        run: |
          VERSION=$(poetry version -s)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          if [[ "$VERSION" == *"a"* || "$VERSION" == *"b"* || "$VERSION" == *"rc"* || "$VERSION" == *"dev"* ]]; then
            echo "prerelease=true" >> "$GITHUB_OUTPUT"
          else
            echo "prerelease=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Publish to PyPI
        if: steps.vars.outputs.prerelease == 'false'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
      - name: Publish to Test PyPI
        if: steps.vars.outputs.prerelease == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: v${{ steps.vars.outputs.version }}
          generate_release_notes: true
          prerelease: ${{ steps.vars.outputs.prerelease }}
